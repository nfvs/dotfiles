#
# Oceanic Next color palette:
# https://github.com/voronianski/oceanic-next-color-scheme?tab=readme-ov-file#color-palette
# base 00: #1B2B34 (black)
# base 01: #343D46 (darkest gray)
# base 02: #4F5B66 (dark gray)
# base 03: #65737E (...)
# base 04: #A7ADBA
# base 05: #C0C5CE
# base 06: #CDD3DE
# base 07: #D8DEE9
# base 08: #EC5f67 (lightest gray)
# base 09: #F99157 (red)
# base 0A: #FAC863 (orange)
# base 0B: #99C794 (green)
# base 0C: #5FB3B3 (dark green)
# base 0D: #6699CC (blue)
# base 0E: #C594C5 (pink)
# base 0F: #AB7967 (brown)
#

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'on'

# --------
# Settings
# --------

set -g default-shell $SHELL

# set -g mouse on
set -g set-clipboard on

# Reduce key repeat-time (default: 500)
set -g repeat-time 500

# Pane titles
set -g set-titles 'on'

# ----------
# Appearance
# ----------

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",tmux-256color:Tc"

# If the machine doesn't support the tmux-* terminfo, add the following line to add support for italics
# set -ga terminal-overrides ',xterm-256color:sitm=\E[3m'

# set inactive/active window styles
set -g window-style fg=colour245
set -g window-active-style fg=white

# pane border
set -g pane-border-style fg=#4F5B66
set -g pane-active-border-style fg=#99C794

# Highlight active window
set-window-option -g window-status-current-style bg=colour255
# set-window-option -g window-status-current-style bg=red

# status bar config
# characters:    
set -g status-position bottom
set -g status-style fg=white,bg=#343D46
set -g window-status-style fg=default
set -g window-status-current-style fg=green
set -g status-left "#[bg=#343D46,fg=white]  ⧉ #S  #[fg=#343D46]"
set -g status-left-length 50
set -g status-right-length 50
# set -g status-right "#[fg=#99C794,bg=#343d46]#[bg=green,fg=#4F5B66] #h #[fg=#343D46]#[bg=#343D46,fg=#4F5B66]#[fg=default,bg=#4F5B66] %H:%M %d-%h-%Y "
set -g status-right "#[fg=#4F5B66,bg=#343D46]#[bg=#4F5B66,fg=default] #h #[fg=#343D46]#[bg=#343D46,fg=default] %H:%M #[fg=#4F5B66]#[fg=default] %d-%m-%Y "
setw -g window-status-current-format "#[bg=green,fg=#343D46,bold] #I  #W #[fg=green,bg=#343d46]"
setw -g window-status-format "#[bg=#4F5B66,fg=#343D46]#[fg=default] #I #[fg=default]#[fg=default] #W #[bg=#343D46,fg=#4F5B66]"
setw -g window-status-separator ""

# listen to alerts from all windows
set -g bell-action any

# ------------
# Key settings
# ------------

# Home/End keys
bind-key -n End send-key C-e
bind-key -n Home send-key C-a

# Pass fn-keys
set-option -g xterm-keys 'on'

# use vim keybindings in copy mode
setw -g mode-keys vi

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix C-a
bind-key C-a last-pane

# Vim hjkl to change panes (repeatable with ctrl)
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-pane -L
bind-key -r C-j select-pane -D
bind-key -r C-k select-pane -U
bind-key -r C-l select-pane -R

# Change panes with arrows non-repeatable
bind-key Left select-pane -L
bind-key Down select-pane -D
bind-key Up select-pane -U
bind-key Right select-pane -R

# Move windows
bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1

# Splits
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# enlarged-first-pane vertical layout
bind-key M-0 select-layout main-vertical\; resize-pane -t 0 -x 200

# Copy/paste
unbind-key -T copy-mode-vi 'v'      ; bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
unbind-key -T copy-mode-vi 'y'      ; bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

# SSH Agent fix
set -g update-environment -r
if-shell "test '$SSH_CLIENT'" { setenv -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock }

# Load local overrides?
if-shell '[ -f "$HOME/.tmux.conf.local" ]' {
    source-file $HOME/.tmux.conf.local
}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
